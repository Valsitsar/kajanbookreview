@page "{shelf?}/{pageNumber:int?}"
@model MyBooksModel
@{
    ViewData["Title"] = "My Books";
    string selectedShelf = Model.SelectedShelf ?? "All";
    int currentPage = Model.CurrentPage;
    int totalPages = Model.TotalPages;
}

<div class="container my-books-wrapper">
    <div class="row">
        <div class="col-md-2"></div>
        <div class="col-md-10">
            <h1 class="text-center mb-5">My Books</h1>
        </div>
        <!-- Sidebar for bookshelves -->
        <div class="col-md-2">
            <div class="card">
                <div class="card-header">
                    <strong>My Bookshelves</strong>
                </div>
                <div class="list-group list-group-flush mb-3">
                    <a href="@Url.Page("MyBooks", new { shelf = "All" })" class="list-group-item list-group-item-action @((selectedShelf == "All") ? "active" : "")">
                        All
                        <span class="badge bg-secondary">@Model.Bookshelves.Sum(shelf => shelf.Books.Count)</span>
                    </a>
                </div>
                <div class="list-group list-group-flush">
                    @foreach (var shelf in Model.Bookshelves)
                    {
                        <a href="@Url.Page("MyBooks", new { shelf = shelf.Name })" class="list-group-item list-group-item-action @((shelf.Name == selectedShelf) ? "active" : "")">
                            @shelf.Name
                            <span class="badge bg-secondary">@shelf.Books.Count</span>
                        </a>
                    }
                </div>
            </div>
            <div class="mt-3 d-grid gap-2">
                <button type="button" class="btn btn-goldenrod" data-bs-toggle="modal" data-bs-target="#addShelfModal">
                    Add Shelf
                </button>
            </div>

            <!-- Add Shelf Modal -->
            <div class="modal fade" id="addShelfModal" tabindex="-1" aria-labelledby="addShelfModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="addShelfModalLabel">Add New Bookshelf</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <form method="post" asp-page-handler="AddBookshelf">
                            <div class="modal-body">
                                <div class="mb-3">
                                    <label for="shelfName" class="form-label">Bookshelf Name</label>
                                    <input type="text" class="form-control" id="shelfName" name="shelfName" required>
                                </div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                <button type="submit" class="btn btn-primary">Add Shelf</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>

        <!-- Main content for book info -->
        <div class="col-md-10">
            <div class="table-responsive">
                <table class="table table-bordered text-center">
                    <thead class="thead-light">
                        <tr>
                            <th scope="col">Cover</th>
                            <th scope="col">Title</th>
                            <th scope="col">Author</th>
                            <th scope="col">Average Rating</th>
                            <th scope="col">Shelves</th>
                            <th scope="col">Date Published</th>
                        </tr>
                    </thead>
                    <tbody style="vertical-align: middle;">
                        @foreach (var book in Model.PagedBooks)
                        {
                            <tr>
                                @{
                                    var averageRating = book.Reviews != null && book.Reviews.Count > 0 ? book.Reviews.Average(r => r.BookRating) : 0;
                                    var percentage = (averageRating / 5.0) * 100;
                                }
                                <td style="width:40px" class="p-1">
                                    @if (book.CoverFilePath != null)
                                    {
                                        <img src="@Url.Content(book.CoverFilePath)" alt="Book cover" class="book-cover">
                                    }
                                    else
                                    {
                                        <img src="/img/Book_cover_unavailable.png" alt="Book cover" class="book-cover">
                                    }
                                </td>
                                <td style="width: 150px;">@book.Title</td>
                                <td style="width: 250px;">@string.Join(", ", book.Authors.Select(a => $"{a.FirstName} {a.MiddleNames} {a.LastName}"))</td>
                                <td style="width: 150px;">
                                    <div class="text-center">
                                        @averageRating.ToString("F2")
                                    </div>
                                    <div class="stars-outer fs-6 text-center">
                                        @for (int i = 0; i < 5; i++)
                                        {
                                            <i class="bi bi-star text-warning"></i>
                                        }
                                        <div class="stars-inner fs-6" style="width:@percentage%">
                                            @for (int i = 0; i < 5; i++)
                                            {
                                                <i class="bi bi-star-fill"></i>
                                            }
                                        </div>
                                    </div>
                                </td>
                                <td>
                                    @string.Join(", ", Model.Bookshelves.Where(shelf => shelf.Books.Contains(book)).Select(shelf => shelf.Name))
                                </td>
                                <td>@book.PubDate.ToString("MMMM dd, yyyy")</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <!-- Error Message -->
            @if (!Model.HasBooks)
            {
                <div class="alert alert-info text-center" role="alert">
                    No books available in this shelf. Please select a different shelf or add more books.
                </div>
            }
            <!-- Pagination Controls -->
            @if (totalPages > 1)
            {
                <nav aria-label="Page navigation">
                    <ul class="pagination justify-content-center">
                        <li class="page-item @(currentPage == 1 ? "disabled" : "")">
                            <a class="page-link" href="@Url.Page("MyBooks", new { shelf = selectedShelf, pageNumber = currentPage - 1 })">Previous</a>
                        </li>
                        @for (int i = 1; i <= totalPages; i++)
                        {
                            <li class="page-item @(currentPage == i ? "active" : "")">
                                <a class="page-link" href="@Url.Page("MyBooks", new { shelf = selectedShelf, pageNumber = i })">@i</a>
                            </li>
                        }
                        <li class="page-item @(currentPage == totalPages ? "disabled" : "")">
                            <a class="page-link" href="@Url.Page("MyBooks", new { shelf = selectedShelf, pageNumber = currentPage + 1 })">Next</a>
                        </li>
                    </ul>
                </nav>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            $(".bookshelf-link").click(function (e) {
                var shelfName = $(this).data("shelf");
                $('#bookList').load('/MyBooks/LoadBooks?shelf=' + shelfName)
                console.log(shelfName);
            });
        });
    </script>
}
