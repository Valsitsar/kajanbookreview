@page
@using BusinessLogicLayer.Interfaces
@using System.Security.Claims
@inject IUserManager userManager;
@model Web_App.Pages.BookDetailsModel
@{
    ViewData["Title"] = $"{Model.CurrentBook?.Title} details" ?? $"Book Details";
    double averageRating = 0;
    double percentage = 0;

    if (Model.CurrentBook?.Reviews?.Any() == true) // Check if there are any reviews
    {
        averageRating = Math.Round(Model.CurrentBook.Reviews.Average(r => r.BookRating), 2);
        percentage = (averageRating / 5.0) * 100;
    }

    var coverFilePath = Model.CurrentBook?.CoverFilePath;
    if (coverFilePath == null || coverFilePath == "")
    {
        coverFilePath = "/img/Book_cover_unavailable.png";
    }
    coverFilePath = Url.Content(coverFilePath);

    var bookID = Model.CurrentBook.ID;
    var returnUrl = Url.Page("/BookDetails", new { id = bookID });

    var isUserAuthenticated = User.Identity.IsAuthenticated;

    // TODO: Add funtionality to display error messages
}

<div id="BookDetails-body" style="margin-top: 75px;">
    <div class="content-wrapper row">
        <!-- #region Left column -->
        <div class="col-12 col-lg-3 mb-4">
            <div class="sticky-sidebar">
                <div class="text-center">
                    <img class="book-cover img-fluid rounded" src="@coverFilePath" alt="@Model.CurrentBook.Title cover">
                    <div id="star-rating" class="my-2">
                        @for (int i = 0; i < 5; i++)
                        {
                            <i class="bi bi-star text-warning fs-3"></i>
                        }
                    </div>
                    <div class="btn-group" role="group">
                        <button type="button" class="btn btn-lg btn-goldenrod">Want to read</button>
                        <button type="button" class="btn btn-lg btn-goldenrod dropdown-toggle dropdown-toggle-split overflow-auto" data-bs-toggle="dropdown" aria-expanded="false">
                            <span class="visually-hidden">Toggle Dropdown</span>
                        </button>
                        <ul class="dropdown-menu border-goldenrod">
                            @if (isUserAuthenticated)
                            {
                                @foreach (var bookshelf in Model.UserBookshelves)
                                {
                                    <form method="post" asp-page-handler="AddToBookshelf">
                                        <input type="hidden" name="CurrentBookID" value="@Model.CurrentBook.ID" />
                                        <input type="hidden" name="BookshelfID" value="@bookshelf.ID" />
                                        <li><button type="submit" class="dropdown-item">@bookshelf.Name</button></li>
                                    </form>
                                }
                            }
                            else
                            {
                                <li><a class="dropdown-item" href="/SignIn?ReturnUrl=@returnUrl">Sign in to add to bookshelf</a></li>
                            }
                        </ul>
                        @if (TempData["Message"] != null)
                        {
                            <script>
                                alert('@TempData["Message"]');
                            </script>
                        }
                    </div>
                </div>
            </div>
        </div>
        <!-- #endregion -->

        <!-- #region Right column -->
        <div class="col-12 col-lg-9">
            <!-- #region Book info section -->
            <div class="row">
                <!-- #region Book title, author -->
                <div class="col-12">
                    <h1><strong>@Model.CurrentBook.Title</strong></h1>
                </div>
                <div class="col-12 mb-3">
                    @if (Model.CurrentBook.Authors.Count == 1)
                    {
                        <h5>@Model.CurrentBook.Authors[0].FirstName @Model.CurrentBook.Authors[0].LastName</h5>
                    }
                    else
                    {
                        <h5>
                            <span>@Model.CurrentBook.Authors[0].FirstName @Model.CurrentBook.Authors[0].LastName</span>
                            @foreach (var author in Model.CurrentBook.Authors)
                            {
                                @if (author != Model.CurrentBook.Authors[0])
                                {
                                    <span>, @author.FirstName @author.LastName</span>
                                }
                            }
                        </h5>
                    }
                </div>
                <!-- #endregion -->

                <!-- #region Short Star-rating statistics -->
                <div class="col-12 mb-3">
                    <div class="d-flex align-items-center mb-3">
                        <div class="me-2">
                            <div class="stars-outer">
                                @for (int i = 0; i < 5; i++)
                                {
                                    <i class="bi bi-star text-warning"></i>
                                }
                                <div class="stars-inner" style="width:@percentage%">
                                    @for (int i = 0; i < 5; i++)
                                    {
                                        <i class="bi bi-star-fill"></i>
                                    }
                                </div>
                            </div>
                        </div>
                        <div>
                            <span class="fw-bold fs-4">@averageRating</span>
                            <span class="text-muted">/ 5</span>
                            <span class="text-muted ms-2">
                                @Model.CurrentBook.Reviews.Count() ratings
                            </span>
                            <span class="text-muted">·</span>
                            <span class="text-muted">
                                @Model.CurrentBook.Reviews.FindAll(r => r.Body != null).Count() reviews
                            </span>
                        </div>
                    </div>
                </div>
                <!-- #endregion -->

                <!-- #region More info + Description -->
                <div class="d-flex mt-2 fs-5">
                    <dl class="me-4">
                        <dt>#X IN SERIES</dt>
                        <dd>Example Series</dd> <!-- Placeholder for series data -->
                    </dl>
                    <dl class="me-4">
                        <dt>PUBLISHER</dt>
                        <dd>@Model.CurrentBook.Publisher, @Model.CurrentBook.PubDate.Year</dd>
                    </dl>
                    <dl>
                        <dt>PAGES</dt>
                        <dd>@Model.CurrentBook.PageCount</dd>
                    </dl>
                </div>
                <div class="fs-5">
                    <p class="card-text mt-xxl-3 mt-0">@Model.CurrentBook.Description</p>
                </div>
                <!-- #endregion -->
            </div>
            <!-- #endregion -->

            <!-- #region Additional Details section -->
            <div class="row additional-details mt-lg-5 mb-5">
                <div class="col-12">
                    <h2>Additional Details</h2>
                    <div class="border-goldenrod p-2 px-3">
                        <dl class="row fs-5">
                            <div class="col-4">
                                <dt class="text-muted">TITLE</dt>
                                <dd class="mb-4">@Model.CurrentBook.Title</dd>
                            </div>
                            <div class="col-4">
                                <dt class="text-muted">LANGUAGE</dt>
                                <dd class="mb-4">@Model.CurrentBook.Language</dd>
                            </div>
                            <div class="col-4">
                                <dt class="text-muted">PAGES</dt>
                                <dd class="mb-4">@Model.CurrentBook.PageCount</dd>
                            </div>

                            <div class="col-4">
                                <dt class="text-muted">FORMAT</dt>
                                <dd class="mb-4">@Model.CurrentBook.Format.Name</dd>
                            </div>
                            <div class="col-4">
                                <dt class="text-muted">ISBN</dt>
                                <dd class="mb-4">@Model.CurrentBook.ISBN</dd>
                            </div>
                            <div class="col-4">
                                <dt class="text-muted">GENRES</dt>
                                <dd class="mb-4">
                                    @for (int i = 0; i < Model.CurrentBook.Genres.Count; i++)
                                    {
                                        <span>@Model.CurrentBook.Genres[i].Name</span>
                                        if (i < Model.CurrentBook.Genres.Count - 1)
                                        {
                                            <span>, </span>
                                        }
                                    }
                                </dd>
                            </div>

                            <div class="col-4">
                                <dt class="text-muted">PUBLISHER</dt>
                                <dd class="mb-4">@Model.CurrentBook.Publisher</dd>
                            </div>
                            <div class="col-4">
                                <dt class="text-muted">PUBLISHED ON</dt>
                                <dd class="mb-4">@Model.CurrentBook.PubDate.Day/@Model.CurrentBook.PubDate.Month/@Model.CurrentBook.PubDate.Year</dd>
                            </div>
                            <div class="col-4">
                                <dt class="text-muted">#3 IN SERIES</dt>
                                <dd class="mb-4">Example series</dd>
                            </div>
                        </dl>
                    </div>
                </div>
            </div>
            <!-- #endregion -->

            <!-- #region Rating stats Section -->
            <div class="row">
                <div class="col-12 mb-3">
                    <h2>Ratings</h2>
                    <div class="d-flex justify-content-center align-items-center mb-5">
                        <div class="me-2 text-center">
                            <div class="display-4 fw-bold">
                                @averageRating <span class="text-muted">/ 5</span>
                            </div>
                            <div class="text-muted">@Model.CurrentBook.Reviews.Count ratings</div>
                        </div>
                        <br />
                        <div class="ms-2 text-center">
                            <div class="stars-outer position-relative">
                                @for (int i = 0; i < 5; i++)
                                {
                                    <i class="bi bi-star"></i>
                                }
                                <div class="stars-inner position-absolute" style="width:@percentage%">
                                    @for (int i = 0; i < 5; i++)
                                    {
                                        <i class="bi bi-star-fill"></i>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-12 mb-3">
                    @for (int rating = 5; rating >= 1; rating--)
                    {
                        <div class="d-flex align-items-center mb-2">
                            <span class="fs-5">@rating</span>
                            <i class="bi bi-star-fill text-warning ms-2"></i>
                            <div class="progress flex-grow-1 mx-2" style="height: 1rem; background-color: #444;">
                                <div class="progress-bar bg-warning" role="progressbar" style="width:@(Model.CurrentBook.Reviews.Count(r => r.BookRating == rating) / (double)Model.CurrentBook.Reviews.Count() * 100)%" aria-valuenow="@(Model.CurrentBook.Reviews.Count(r => r.BookRating == rating))" aria-valuemin="0" aria-valuemax="@Model.CurrentBook.Reviews.Count()"></div>
                            </div>
                            <span class="fs-6">@Model.CurrentBook.Reviews.Count(r => r.BookRating == rating)</span>
                        </div>
                    }
                </div>
                <div class="col-12 mb-5">
                    <h4>How did you like the book? Let others know!</h4>
                    <div class="d-flex align-items-center">
                        @if (@isUserAuthenticated)
                        {
                            <button type="button" class="btn btn-lg btn-goldenrod" data-bs-toggle="modal" data-bs-target="#reviewModal">
                                Write review
                            </button>
                        }
                        else
                        {
                            // Redirect to sign in page with the return URL
                            <a href="/SignIn?ReturnUrl=@returnUrl" >
                                <button type="button" class="btn btn-lg btn-goldenrod">
                                    Write review
                                </button>
                            </a>
                        }
                    </div>
                </div>
            </div>
            <!-- #endregion -->

            <!-- #region Review Modal -->
            <div class="modal fade" id="reviewModal" tabindex="-1" aria-labelledby="reviewModalLabel" aria-hidden="true">
                <div class="modal-dialog modal-dialog-centered">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="reviewModalLabel">Write a Review</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <form id="reviewForm" method="post" asp-page-handler="CreateReview">
                                <input type="hidden" asp-for="@Model.CurrentBookID" />
                                <div class="form-group mb-3">
                                    <label for="reviewTitle" class="form-label">Review Title</label>
                                    <input type="text" class="form-control" id="reviewTitle" name="reviewTitle" required>
                                </div>
                                <div class="form-group mb-3">
                                    <label for="reviewBody" class="form-label">Review Body</label>
                                    <textarea class="form-control" id="reviewBody" name="reviewBody" rows="3" required></textarea>
                                </div>
                                <div class="mb-3">
                                    <div class="me-2">
                                        <div class="stars-outer" style="cursor: pointer;">
                                            @for (int i = 1; i <= 5; i++)
                                            {
                                                <i class="bi bi-star text-warning" data-value="@i"></i>
                                            }
                                        </div>
                                        <input type="hidden" id="userRating" name="userRating" value="0" />
                                    </div>
                                </div>
                            </form>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                            <button type="submit" class="btn btn-goldenrod" form="reviewForm">Submit Review</button>
                        </div>
                    </div>
                </div>
            </div>
            <!-- #endregion -->

            <!-- #region Reviews list -->
            <section class="mb-5" id="reviews">
                <h2 class="my-5">Reviews by fellow bookworms</h2>
                @foreach (var review in Model.CurrentBook.Reviews)
                {
                    @if (review.Body == null) { continue; }
                    <div class="card mb-3 border-goldenrod">
                        <div class="card-body">
                            <!-- #region Review header -->
                            <div class="d-flex justify-content-between mb-2">
                                <div class="d-flex align-items-center">
                                    @if (review.Poster.ProfilePictureFilePath != null && review.Poster.ProfilePictureFilePath != string.Empty)
                                    {
                                        <img src="@Url.Content(review.Poster.ProfilePictureFilePath)" alt="@review.Poster.Username profile picture" class="rounded-circle me-2" style="width: 50px; height: 50px;">
                                    }
                                    else
                                    {
                                        // TODO: Default profile picture - make it an SVG later
                                        <i class="bi bi-person-circle fs-3 text-muted me-2"></i>
                                    }
                                    <h5 class="card-title mb-0 fs-3">@review.Poster.Username</h5>
                                </div>

                                @* The rating of the review *@
                                <div class="d-flex align-items-center text-muted">
                                    @for (int i = 0; i < review.BookRating; i++)
                                    {
                                        <i class="bi bi-star-fill text-warning me-1"></i>
                                    }
                                    @for (int i = 0; i < 5 - review.BookRating; i++)
                                    {
                                        <i class="bi bi-star text-warning me-1"></i>
                                    }
                                    <span class="ms-2">@review.PostDate.ToString("MMMM dd, yyyy")</span>
                                </div>
                            </div>
                            <!-- #endregion -->

                            <!-- #region Review content -->
                            <strong class="card-text fs-5">@review.Title</strong>
                            <p class="card-text fs-5">@review.Body</p>
                            <!-- #endregion -->

                            <!-- #region Review actions -->
                            <div class="d-flex align-items-start">
                                <button type="button" class="btn btn-sm p-0 text-decoration-none">
                                    <span>&#128563 @review.UpvoteCount</span>
                                </button>
                                <button type="button" class="btn btn-sm p-0 text-decoration-none mx-3" id="btnDownvote" onclick="playVineBoomSound()">
                                    <span>&#128128 @review.DownvoteCount</span>
                                </button>
                                @* <button type="button" class="btn btn-sm p-0 text-decoration-none">
                                    <i class="bi bi-reply"></i> Reply
                                </button> *@
                            </div>
                            <!-- #endregion -->

                        </div>
                    </div>
                }
            </section>
            <!-- #endregion -->
        </div>
        <!-- #endregion -->
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const stars = document.querySelectorAll('.stars-outer .bi');
            let currentRating = 0; // Keeps track of the current selected rating

            stars.forEach(star => {
                star.addEventListener('mouseover', (e) => {
                    updateStarsVisual(e.target.getAttribute('data-value'), false);
                });

                star.addEventListener('mouseout', () => {
                    // When mouse leaves, revert to the current selected rating
                    updateStarsVisual(currentRating, true);
                });

                star.addEventListener('click', (e) => {
                    currentRating = e.target.getAttribute('data-value');
                    document.getElementById('userRating').value = currentRating; // Update the hidden input value
                    updateStarsVisual(currentRating, true);
                });
            });

            function updateStarsVisual(rating, permanent) {
                stars.forEach(star => {
                    if (star.getAttribute('data-value') <= rating) {
                        star.classList.remove('bi-star');
                        star.classList.add('bi-star-fill');
                    } else if (permanent) {
                        // Only revert back if the change is meant to be permanent (after click, not hover)
                        star.classList.add('bi-star');
                        star.classList.remove('bi-star-fill');
                    }
                });
            }
        });
    </script>
}
