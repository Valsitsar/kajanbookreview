@page

@using BusinessLogicLayer.Interfaces;
@inject IUserManager userManager;
@inject IBookshelfManager bookshelfManager;
@model ProfileModel
@{
    ViewData["Title"] = "Profile";
    // TODO: Figure out how to get all the user's book ratings
    // List<Review> reviews = Model.CurrentUser.Posts.FindAll(r => r.GetType() == typeof(Review));

    int totalUpvotes = 0;
    int totalDownvotes = 0;
    int totalRatings = 0;
    int totalReviews = 0;
    double averageRating = 0;
    decimal upvoteDownvoteRatio = 0;
    int totalBookCountInShelves = 0;

    if (Model.CurrentUser.Reviews != null && Model.CurrentUser.Reviews.Count > 0)
    {
        // Calculate the total number of upvotes and downvotes for all reviews
        totalUpvotes = Model.CurrentUser.Reviews.Sum(r => r.UpvoteCount);
        totalDownvotes = Model.CurrentUser.Reviews.Sum(r => r.DownvoteCount);
        totalReviews = Model.CurrentUser.Reviews.Count(r => r.Body != null && r.Body != "");
        totalRatings = Model.CurrentUser.Reviews.Count - totalReviews;
        averageRating = Model.CurrentUser.Reviews.Average(r => r.BookRating);
        // int bookRatingSum = Model.CurrentUser.Posts.FindAll(r => r.GetType() == typeof(Review));
        upvoteDownvoteRatio = totalDownvotes == 0 ? totalUpvotes : (decimal)totalUpvotes / totalDownvotes;

    }

    var bookshelvesWithBookCounts = Model.CurrentUser.Bookshelves
                                    .Zip(Model.bookshelfBookCounts, (bookshelf, bookCount) => new { bookshelf, bookCount });

    totalBookCountInShelves = Model.bookshelfBookCounts.Sum();
}

<div class="container profile-wrapper d-flex justify-content-center mb-5">
    <div class="row w-75">
        <!-- Profile Picture and Ratings Section -->
        <div class="col-md-3 text-center">
            @if (Model.CurrentUser.ProfilePictureFilePath != null)
            {
                <img src="@Url.Content(Model.CurrentUser.ProfilePictureFilePath)" id="UserProfilePicture" class="img-fluid rounded-circle mb-3" alt="Profile Picture" style="max-width: 100%">
            }
            else {
                <img src="/img/default-profile-picture.png" id="UserProfilePicture" class="img-fluid rounded-circle mb-3" alt="Profile Picture" style="max-width: 100%">
            }
            <div>
                <p><strong>
                    <div>@totalReviews reviews with ratings</div>
                    <div>@totalRatings standalone ratings</div>
                </strong></p>
                <p><strong>Up/Down: @upvoteDownvoteRatio.ToString("F2")</strong></p>
            </div>
        </div>

        <!-- User Information Section -->
        <div class="col-xxl-7 col-md-8">
            <h2 class="text-start mb-4"><strong>@Model.CurrentUser.Username (@Model.CurrentUser.FirstName @Model.CurrentUser.LastName)</strong></h2>
            <p class="text-start">@Model.CurrentUser.MiddleNames</p>
            <p class="text-start"><i class="bi bi-envelope"></i> @Model.CurrentUser.Email</p>
            <p class="text-start"><i class="bi bi-telephone"></i> @Model.CurrentUser.PhoneNumber</p>

            <!-- Edit Details Button -->
            <div class="col-12 text-start mt-4">
                <form action="/ProfileEdit">
                    <input type="submit" class="btn btn-goldenrod" value="Edit details" />
                </form>
            </div>
            
            <!-- Bookshelves Section -->
            <div class=" mt-2 pt-4 border-top-goldenrod">
                <h3>Bookshelves</h3>
                <ul class="list-group border-goldenrod">
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        <a href="/MyBooks/All" class="text-decoration-none list-group-item-action">All</a>
                        <span class="badge bg-goldenrod rounded-pill">@totalBookCountInShelves</span>
                    </li>
                    @foreach (var item in bookshelvesWithBookCounts)
                    {
                        // Encode the bookshelf name to be used in the URL (spaces are replaced with %20)
                        var encodedBookshelfName = System.Uri.EscapeDataString(item.bookshelf.Name);
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            <a href=@($"/Mybooks/{encodedBookshelfName}") class="text-decoration-none list-group-item-action">
                                @item.bookshelf.Name
                            </a>
                            <span class="badge bg-goldenrod rounded-pill">
                                @item.bookCount
                            </span>
                        </li>
                    }
                </ul>
            </div>
        </div>
    </div>
</div>
